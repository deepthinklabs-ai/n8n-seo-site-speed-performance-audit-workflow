{
  "meta": {
    "instanceId": "deepthinklabs.app.n8n.cloud"
  },
  "nodes": [
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ed173ad7-6ac1-4d27-a448-37597cb7957a",
              "name": "site",
              "value": "https://howtopreventratsfromeatingcarwires.com",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1232,
        800
      ],
      "id": "01106859-b055-473b-a641-297c6eb674cc",
      "name": "Init Site"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -1456,
        800
      ],
      "id": "5c8c1781-3e94-4d7d-baf8-41cc5d714a8e",
      "name": "When clicking 'Execute workflow'"
    },
    {
      "parameters": {
        "url": "={{ ($json.site || '').replace(/\\/+$/,'') + '/sitemap.xml' }}\n",
        "options": {
          "allowUnauthorizedCerts": false,
          "redirect": {
            "redirect": {}
          },
          "response": {
            "response": {
              "responseFormat": "text"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -976,
        800
      ],
      "id": "c285803d-273d-48a8-a4d6-1af5829b2d87",
      "name": "Fetch Sitemap",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// Expect raw XML in $json.data or $json.body depending on your HTTP node\nconst xml = $json.data || $json.body || '';\n// Extract all <loc> values (handles namespaces and whitespace)\nconst locs = Array.from(xml.matchAll(/<loc[^>]*>\\s*([^<\\s][^<]*)\\s*<\\/loc>/gi))\n  .map(m => m[1].trim());\n\n// Emit each URL as its own item\nif (locs.length) {\n  return locs.map(u => ({ json: { url: u, source: 'sitemap' }}));\n}\n\n// If nothing found, emit a marker so we can trigger the fallback crawler later\nreturn [{ json: { url: null, source: 'sitemap', empty: true }}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -464,
        784
      ],
      "id": "e02e9c5f-0200-4191-a370-8618af9cdb28",
      "name": "Parse Sitemap"
    }
  ],
  "connections": {
    "Init Site": {
      "main": [
        [
          {
            "node": "Fetch Sitemap",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking 'Execute workflow'": {
      "main": [
        [
          {
            "node": "Init Site",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Sitemap": {
      "main": [
        [
          {
            "node": "Sitemap fetched?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse Sitemap": {
      "main": [
        [
          {
            "node": "Has child sitemaps?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "name": "SEO Site Speed/Performance Review",
  "createdAt": "2025-08-28T21:16:40.891Z",
  "updatedAt": "2025-09-04T16:37:09.000Z",
  "active": false,
  "id": "Yhcly00PZmo7YMoy",
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "06395726-4dd0-4dc1-9895-205c23dee733"
}